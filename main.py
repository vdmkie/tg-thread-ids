import os
import asyncio
import logging
from aiogram import Bot, Dispatcher, F
from aiogram.filters import Command
from aiogram.types import Message

BOT_TOKEN = os.getenv("BOT_TOKEN")

if not BOT_TOKEN:
    raise ValueError("‚ùå BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è BOT_TOKEN.")

dp = Dispatcher()

@dp.message(Command("where", "ids"))
async def send_ids(m: Message):
    chat_id = m.chat.id
    thread_id = m.message_thread_id
    chat_type = m.chat.type
    text = (
        "üìå –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–µ—Å—Ç–µ:\n"
        f"‚ñ´Ô∏è chat_id: {chat_id}\n"
        f"‚ñ´Ô∏è thread_id: {thread_id}\n"
        f"‚ñ´Ô∏è chat_type: {chat_type}"
    )
    print(text)
    await m.reply(text)

# –õ–æ–≥–∏—Ä—É–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è
@dp.message()
async def log_any(m: Message):
    logging.info(
        f"[MSG] chat_id={m.chat.id}, thread_id={m.message_thread_id}, text={m.text}"
    )

async def main():
    logging.basicConfig(level=logging.INFO)
    bot = Bot(BOT_TOKEN)
    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
